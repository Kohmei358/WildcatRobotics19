#include "robot-config.h"

    /*
        Code written by Rider Bishop. This code works with both an arcade and tank control. 
        The 2 modes can be switched by holding X for 3 seconds.
        Version 2.2 (10/19/18)
        Changed many controller value calls to variables 
    */

//space for global vairables

//there will be 5 speed modes, 20%, 40%, 60%, 80%, 100
/*
float speed = 1;


double controllerAxis1;
double controllerAxis2;
double controllerAxis3;
double controllerAxis4;

bool controllerButtonUp;
bool controllerButtonDown;
bool controllerButtonL1;
bool controllerButtonL2;
bool controllerButtonR1;
bool controllerButtonR2;
bool contorllerButtonX;
*/

/*
void increaseSpeed(){
  if(speed < 1.0){
    speed += 0.2;
  }
}

void decreaseSpeed(){
  if(speed > 0){
    speed -= -0.2;
  }
}

void printSpeed(){
    if(speed == 0.2){
      Controller1.Screen.newLine();
      Controller1.Screen.print("Speed: 1");
    }
    
    if(speed == 0.4){
      Controller1.Screen.newLine();
      Controller1.Screen.print("Speed: 2");
    }
    
    if(speed == 0.6){
      Controller1.Screen.newLine();
      Controller1.Screen.print("Speed: 3");
    }
    
    if(speed == 0.8){
      Controller1.Screen.newLine();
      Controller1.Screen.print("Speed: 4");
    }
    
    if(speed == 1){
      Controller1.Screen.newLine();
      Controller1.Screen.print("Speed: 5");
    }     
}
*/
int main() {

	/*  motors
	
	upRight
	downLeft
	downRight
	intakeMotor
	launcherMotor
    
  capFlipperMotor
  CapLiftMotor
	*/
    
    //declare vairables for the contorller values here.
    
    while(1){
        //initualizing vairables
        /*
        controllerAxis1 = Controller1.Axis1.value();
        controllerAxis2 = Controller1.Axis2.value();
        controllerAxis3 = Controller1.Axis3.value();
        controllerAxis4 = Controller1.Axis4.value();
        
        controllerButtonUp = Controller1.ButtonUp.pressing();
        controllerButtonDown = Controller1.ButtonDown.pressing();
        controllerButtonL1 = Controller1.ButtonL1.pressing();
        controllerButtonL2 = Controller1.ButtonL2.pressing();
        controllerButtonR1 = Controller1.ButtonR1.pressing();
        controllerButtonR2 = Controller1.ButtonR2.pressing();
        contorllerButtonX = Controller1.ButtonX.pressing();
        */
	
    while(Controller1.Axis3.value() >= 25 || Controller1.Axis3.value() <= -25){
        UpLeft.spin(fwd,Controller1.Axis3.value() * 0.75,pct);          
        UpRight.spin(fwd,Controller1.Axis3.value()  * 0.75,pct);
        DownLeft.spin(fwd,Controller1.Axis3.value()  * 0.75,pct);
        DownRight.spin(fwd,Controller1.Axis3.value()  * 0.75,pct);
        
        vex::task::sleep(20);
    }
        
    //for turning left (might need to change the negitives to the other motors, cuz i dont know the layout, or just completly change them)
    while(Controller1.Axis1.value() >= 25 || Controller1.Axis1.value() <= -25){
	    UpLeft.spin(directionType::fwd,Controller1.Axis1.value() * 0.75,pct);          
	    UpRight.spin(directionType::rev,Controller1.Axis1.value() * 0.75,pct);
	    DownLeft.spin(directionType::fwd,Controller1.Axis1.value() * 0.75,pct);
	    DownRight.spin(directionType::rev,Controller1.Axis1.value() * 0.75,pct);

        vex::task::sleep(20);
    }

    if(Controller1.ButtonL1.pressing()){
	//There is no "directiontype" or "velocityUnits" because i think those are unnecessary, and are only there for documentation. 
	   	CapLiftMotor.spin(fwd,75,pct);
	}

	else if(Controller1.ButtonL2.pressing()){
	   	CapLiftMotor.spin(fwd,-75,pct);
	}

    else{
        CapLiftMotor.stop(brakeType::brake);
    }

    if(Controller1.ButtonUp.pressing()){
	  	CapFlipperMotor.spin(fwd,50,pct);
	}

	else if(Controller1.ButtonDown.pressing()){
	   	CapFlipperMotor.spin(fwd,-50,pct);
	}

    else {
      CapFlipperMotor.stop(brakeType::brake);
    }

	if(Controller1.ButtonR1.pressing()){
	    IntakeMotor.spin(fwd,50,pct);
	}

    else {
        IntakeMotor.stop(brakeType::brake);
    }
        
    if(Controller1.ButtonR2.pressing()){
        LauncherMotor.setVelocity(50, pct);
        LauncherMotor.rotateFor(-360, rotationUnits::deg);
    }
        
    else{
        LauncherMotor.stop(brakeType::brake);
    }
    
    //Controller1.ButtonLeft.released(decreaseSpeed);
    //Controller1.ButtonRight.released(increaseSpeed);  
    
    UpLeft.stop(brakeType::coast);
    UpRight.stop(brakeType::coast);
    DownLeft.stop(brakeType::coast);
    DownRight.stop(brakeType::coast);    
        
    vex::task::sleep(20);
    }
}
 